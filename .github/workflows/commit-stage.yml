name: Commit Stage
on: push
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: tomkre/edu-spring-cloud
  VERSION: LATEST
#concurrency: build
jobs:
  build:
    name: Build
    runs-on: ubuntu-22.04
    steps:
      - name: Main step
        run: |
          sleep 9
          echo 'Running main step #2'
#  build:
#    name: Build and Test
#    runs-on: ubuntu-22.04
#    permissions:
#      contents: read
#      security-events: write
#      checks: write
#    steps:
#      - name: Checkout source code
#        uses: actions/checkout@v4
#      - name: Set up JDK
#        uses: actions/setup-java@v4
#        with:
#          distribution: temurin
#          java-version: 21
#          cache: gradle
#      - name: Build, unit and integration tests
#        run: |
#          chmod +x gradlew
#          ./gradlew build
#      - name: Code vulnerability scanning
#        uses: anchore/scan-action@v6
#        id: scan
#        with:
#          path: "${{ github.workspace }}"
#          fail-build: false
#          severity-cutoff: high
#      - name: Upload sarif file
#        uses: actions/upload-artifact@v4
#        with:
#          name: sarif-report
#          path: ${{ steps.scan.outputs.sarif }}
#      - name: Upload vulnerability report
#        uses: github/codeql-action/upload-sarif@v3
#        if: success() || failure()
#        with:
#          sarif_file: ${{ steps.scan.outputs.sarif }}
#  package:
#    name: Package and Publish
#    if: ${{ github.ref == 'refs/heads/master' }}
#    needs: [ build ]
#    runs-on: ubuntu-22.04
#    env:
#      FULL_IMAGE_NAME: "$REGISTRY/$IMAGE_NAME:$VERSION"
#    permissions:
#      contents: read
#      packages: write
#      security-events: write
#    steps:
#      - name: Checkout source code
#        uses: actions/checkout@v4
#      - name: Set up JDK
#        uses: actions/setup-java@v4
#        with:
#          distribution: temurin
#          java-version: 21
#          cache: gradle
#      - name: Build container image
#        run: |
#          chmod +x gradlew
#          ./gradlew bootBuildImage --imageName ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
#      - name: OCI image vulnerability scanning
#        uses: anchore/scan-action@v6
#        id: scan
#        with:
#          image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
#          fail-build: false
#          severity-cutoff: high
#      - name: Upload vulnerability report
#        uses: github/codeql-action/upload-sarif@v3
#        if: success() || failure()
#        with:
#          sarif_file: ${{ steps.scan.outputs.sarif }}
#      - name: Log into container registry
#        uses: docker/login-action@v3
#        with:
#          registry: ${{ env.REGISTRY }}
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#      - name: Publish container image
#        run: |
#          echo 'Pushing ${{ env.FULL_IMAGE_NAME }} to registry'
#          docker image push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}